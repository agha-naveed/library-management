/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.naveed.library_managment;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LinearGradientPaint;
import java.awt.Point;
import java.awt.Rectangle;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aghanaveed_
 */
public class Return_Book extends javax.swing.JInternalFrame {

    /**
     * Creates new form Return_Book
     */
    public Return_Book() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) getUI()).setNorthPane(null);
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReturnBook_Table = new javax.swing.JTable();
        ReturnBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        Search_Field = new javax.swing.JTextField();

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(null);
        setAutoscrolls(true);
        setFrameIcon(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CNIC/ Reg #");

        ReturnBook_Table.setBackground(new java.awt.Color(255, 255, 255));
        ReturnBook_Table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ReturnBook_Table.setForeground(new java.awt.Color(0, 0, 0));
        ReturnBook_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "Borrower", "Book", "Issue Date", "Day", "Fee", "Late Fee /day", "Payable Late Fee", "Payable Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ReturnBook_Table);
        if (ReturnBook_Table.getColumnModel().getColumnCount() > 0) {
            ReturnBook_Table.getColumnModel().getColumn(0).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(0).setPreferredWidth(2);
            ReturnBook_Table.getColumnModel().getColumn(1).setMinWidth(0);
            ReturnBook_Table.getColumnModel().getColumn(1).setPreferredWidth(0);
            ReturnBook_Table.getColumnModel().getColumn(1).setMaxWidth(0);
            ReturnBook_Table.getColumnModel().getColumn(2).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(2).setPreferredWidth(170);
            ReturnBook_Table.getColumnModel().getColumn(3).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(3).setPreferredWidth(150);
            ReturnBook_Table.getColumnModel().getColumn(4).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(4).setPreferredWidth(100);
            ReturnBook_Table.getColumnModel().getColumn(5).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(5).setPreferredWidth(50);
            ReturnBook_Table.getColumnModel().getColumn(6).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(6).setPreferredWidth(70);
            ReturnBook_Table.getColumnModel().getColumn(7).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(8).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(8).setPreferredWidth(100);
            ReturnBook_Table.getColumnModel().getColumn(9).setResizable(false);
            ReturnBook_Table.getColumnModel().getColumn(9).setPreferredWidth(100);
        }

        ReturnBtn.setBackground(new java.awt.Color(255, 255, 255));
        ReturnBtn.setForeground(new java.awt.Color(0, 0, 0));
        ReturnBtn.setText("Return");
        ReturnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBtnActionPerformed(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(255, 255, 255));
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\aghanaveed_\\Desktop\\JAVA Project\\Library_Managment\\Images\\return_book_title_logo.png")); // NOI18N
        jLabel3.setText(" Return Book");

        SearchBtn.setBackground(new java.awt.Color(255, 255, 255));
        SearchBtn.setForeground(new java.awt.Color(0, 0, 0));
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        Search_Field.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Search_Field.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(ReturnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(277, 277, 277))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1035, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Search_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void ReturnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBtnActionPerformed

        ArrayList<Integer> alist = new ArrayList<Integer>();
        String databaseURL = "jdbc:ucanaccess://BookList.accdb";
        try (Connection connection = DriverManager.getConnection(databaseURL)) {

            for (int i=0; i<ReturnBook_Table.getRowCount(); i++) {
                
                if( (boolean)ReturnBook_Table.getValueAt(i, 0) == true ) {
//                  System.out.println(BorrowBook_Table.getValueAt(i, 0));

                  alist.add( (Integer)ReturnBook_Table.getValueAt(i, 1));
                }
            }
            
            
            if(alist.size()>0) {
                
                int Confirm_Box = JOptionPane.showConfirmDialog(rootPane, "Are You Sure to Return Books?", 
                        "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                
                    if (Confirm_Box == JOptionPane.YES_OPTION) {
                        String returned_date = java.time.LocalDate.now().toString();
                        for(int j=0;j<alist.size(); j++) {
                            String sql = "update Borrow_Book set Status = 'Returned', Returned_Date = '"+returned_date+"' where ID = "+alist.get(j);

                        
                        
                        PreparedStatement preparedStatement = connection.prepareStatement(sql);

                        preparedStatement.executeUpdate();
                        }
                    }
                    else
                        JOptionPane.showMessageDialog(rootPane, "Please Returned as soon as possible");
                        
            }
            else
                JOptionPane.showMessageDialog(rootPane, "Select Book first!");
            
        } catch (SQLException sq) {
            sq.printStackTrace();
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_ReturnBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        String SearchField = Search_Field.getText();
                      
        
        if(SearchField.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please Fill Blanks", "Warning!", JOptionPane.WARNING_MESSAGE);
        }
        
        String databaseURL = "jdbc:ucanaccess://BookList.accdb";
        try (Connection connection = DriverManager.getConnection(databaseURL)) {

            String sql;
            
            sql = "select Borrow_Book.ID, Borrower_Name, Book_Name, Borrow_Book.Entry_Date, Return_Days, Fee, Late_Fee from Borrow_Book inner join "+
                    "BookList on Borrow_Book.Book_ID=BookList.ID where CNIC='"+SearchField+"' and Status is null";
        
            
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            
            ResultSet rs = preparedStatement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) ReturnBook_Table.getModel();
            
//            Search pr click krne se old wala remove hojaye
//            Delete from bottom to top
            for (int i = model.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        
            
            while (rs.next()) {
//                    model.addRow(new Object[]{false, rs.getInt("Book_ID"), rs.getString("Borrower_Name"), rs.getInt("Book_ID"),
//                    rs.getDate("Entry_Date"), rs.getInt("Return_days"), rs.getString("Fee"), rs.getString("Late_Fee")});
                Date EntryDate = rs.getDate("Borrow_Book.Entry_Date");
                int ReturnDay = rs.getInt("Return_Days"), Fee = rs.getInt("Fee"), LateFee =  rs.getInt("Late_Fee");
                
//                Entry and Current date is convert and stored in date 1 & date 2
               
                
                Date dateToday = new Date();
                
                
                // Calucalte time difference in milliseconds   
                long time_difference = dateToday.getTime() - EntryDate.getTime(); 
                // Calucalte time difference in days  
                long days_difference = (time_difference / (1000*60*60*24)) % 365;   
                
//              minus krna hai return days ko days_diferrence se
                int extra_days = 0;
                if (days_difference >= ReturnDay){
                    extra_days = (int)days_difference - ReturnDay;
                }
                else if (days_difference < ReturnDay){
                    extra_days = 0;
                }
                
                int payable_latefee = extra_days * LateFee;
                int total_amount = payable_latefee + Fee;
                
                model.addRow(new Object[] {false, rs.getInt("Borrow_Book.ID"), rs.getString("Borrower_Name"), rs.getString("Book_Name"), 
                EntryDate, ReturnDay, Fee, LateFee, payable_latefee, total_amount});
            
            }
            
            
            
        } catch (SQLException sq) {
            sq.printStackTrace();
        } 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JTable ReturnBook_Table;
    private javax.swing.JButton ReturnBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField Search_Field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
